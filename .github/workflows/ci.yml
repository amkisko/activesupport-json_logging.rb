name: CI

on:
  workflow_dispatch:
  push:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        include:
          - rails_version: rails-6.0
            ruby_version: "3.1"
          - rails_version: rails-6.1
            ruby_version: "3.1"
          - rails_version: rails-7.0
            ruby_version: "3.1"
          - rails_version: rails-7.1
            ruby_version: "3.1"
          - rails_version: rails-7.2
            ruby_version: "3.1"
          - rails_version: rails-8.0
            ruby_version: "3.2"
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: ${{ matrix.ruby_version }}
        bundler-cache: false
    
    - name: Install appraisal gem
      run: gem install appraisal --no-document
    
    - name: Generate appraisal gemfile
      run: |
        # Convert rails-6.0 to rails_6.0 format for gemfile name
        GEMFILE_NAME=$(echo "${{ matrix.rails_version }}" | tr '-' '_')
        appraisal install ${{ matrix.rails_version }} || true
        # Verify gemfile was created
        if [ ! -f "gemfiles/${GEMFILE_NAME}.gemfile" ]; then
          echo "Error: gemfile not created at gemfiles/${GEMFILE_NAME}.gemfile"
          exit 1
        fi
        # Set BUNDLE_GEMFILE for subsequent steps
        echo "BUNDLE_GEMFILE=gemfiles/${GEMFILE_NAME}.gemfile" >> $GITHUB_ENV
    
    - name: Update lockfile for platform and Ruby version
      run: |
        GEMFILE_NAME=$(echo "${{ matrix.rails_version }}" | tr '-' '_')
        GEMFILE_PATH="gemfiles/${GEMFILE_NAME}.gemfile"
        export BUNDLE_GEMFILE=${GEMFILE_PATH}
        if [ -f "${GEMFILE_PATH}.lock" ]; then
          # Add Linux platform if needed
          bundle lock --add-platform x86_64-linux --gemfile ${GEMFILE_PATH} 2>/dev/null || true
          # Try to install - if it fails due to incompatible versions, regenerate lockfile
          if ! bundle install --gemfile ${GEMFILE_PATH} 2>/dev/null; then
            echo "Lockfile has incompatible versions, regenerating..."
            rm -f "${GEMFILE_PATH}.lock"
            bundle install --gemfile ${GEMFILE_PATH}
          fi
        fi
    
    - name: Install dependencies
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: ${{ matrix.ruby_version }}
        bundler-cache: true
    
    - name: Run tests
      run: bundle exec appraisal ${{ matrix.rails_version }} rspec
    
    - name: Upload coverage reports to Codecov
      if: matrix.rails_version == 'rails-8.0'
      uses: codecov/codecov-action@v5
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
    
    - name: Run linter
      if: matrix.rails_version == 'rails-8.0'
      env:
        BUNDLE_GEMFILE: Gemfile
      run: |
        bundle install
        bundle exec standardrb --format simple

  coverage:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: "3.4"
          bundler-cache: true
      - run: bundle exec rspec
      - uses: codecov/codecov-action@v5
        continue-on-error: true
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      - uses: codecov/test-results-action@v1
        if: ${{ !cancelled() }}
        continue-on-error: true
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: coverage/junit-coverage.xml
